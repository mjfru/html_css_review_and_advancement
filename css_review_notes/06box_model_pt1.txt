-- The Box Model --
This is a concept that every single element in your browser is...a box!
Therefore, we can treat everything like a box and style it with this in mind.
If you inspect any website, you'll find every element is highlighted with a square or rectangle shape.

This section will be talking a lot about margins, padding, borders, and other spacing properties.


-- Borders --
Let's look at how to control the borders of an element.
There are 3 main things to control with a border: the color, width, and style (solid, dotted, etc.).

Borders are highly customizable, with the ability to have different widths and colors on different parts of the border.

h1 {
    border-width: 4px;              (width is usually set with pixels but other values are valid)
    border-color: violet;
    border-style: solid;
}

Technically, the above is actually shorthand because we're setting all four sides at once.
You could specify each side with syntax like: 
border-right-color: red, border-top-color: blue, etc.

The shorthand to combine everything together is much more common.
We can set the width, style, and color all in one go!

div {
    border: 2px solid green;
}

Finally, you can also just have a border on - one - side of your element.
h2 {
    border-top: 4px groove purple;
}


-- Width, Height, & Percentages --
You can easily set the width and height of an element's "box" with the width and height properties:

h1 {
    width: 500px;
    height 50px;
}

Instead of hard-coding pixels, we can use percents.
This will tell the content how large to be in relation to it's parent container.

#container {
    width: 600px;
    height: 400px;
}

.box {  (inside the above container)
    width: 50%; (the width will be 50% of the container...300px!)
    height: 50%; (200px)
}


-- Padding --
Padding is the space we can optionally add between the border and the element's content.
This can be applied to the whole element or only parts of it, such as top / bottom.

HTML:
<div>
    <a href="google.com">Google</a>
</div>

CSS:
a {
    border: 1px solid red;
    padding: 20px;              This applies padding to all sides of the element.
}

Top - Right - Bottom - Left is the order if we want to specify different padding values for different directions.
padding: 15px 10px 15px 10px;

Top/Bottom - Right/Left is also a valid format too.
padding: 15px 10px;


-- Margins --
Margin is the space outside the edge of 'the box'; between the element and other elements.
Luckily, it has very similar syntax to padding!
By default, some elements have margin already, such as headings.

h1 {
    border: 1px solid black;
    margin: 30px;               Here, all four sides get the same value
}                               There is also: margin-top, bottom, left, right
                                Shorthand also follows the same convention as padding.
a {
    border: 1px solid blue;
}


-- The Regular vs. Alternate Box Model --
There are two ways of calculating the overall dimensions of an element.
So far, when we set the width and height of an element, that's affecting the size of only the element itself.
Padding and borders are then in - addition - to that height and width.

However, there is an alternate method we can use by taking advantage of a property called - box-sizing -.
With { box-sizing: border-box; } set, the width and height not control the - overall - dimensions of the entire visible box.
It will shrink the content as we add borders and padding.
* Note: content-box is the default setting for border-box if we don't specify this property at all.